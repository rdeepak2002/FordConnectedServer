scalar Date

type Post {
  id: ID!
  userId: String!
  fordProfileId: String!
  visibility: String!
  title: String!
  body: String!
  files: [String]!
  user: User!
  updatedAt: Date
  createdAt: Date
}

type Friend {
  id: ID!
  requesterUserId: String!
  status: String!
  pair: [User]!
  pairStr: [String]!
  updatedAt: Date
  createdAt: Date
}

type User {
  id: ID!
  username: String!
  firstName: String!
  lastName: String!
  fordProfileId: String
  updatedAt: Date
  createdAt: Date
  lastActive: Date
  vehicles: [Vehicle]
}

type UserWithToken {
  userId: String!
  fordProfileId: String!
  accessToken: String!
  accessExpiresAtSeconds: Long!
  refreshToken: String!
  refreshExpiresAtSeconds: Long!
}

type Vehicle {
  id: ID!
  userId: String!
  fordProfileId: String!
  make: String
  modelName: String
  modelYear: String
  color: String
  nickname: String
  modemEnabled: Boolean
  vehicleAuthorizationIndicator: Int
  serviceCompatible: Boolean
  lastUpdated: Date
  engineType: String
  fuelLevelValue: Float
  fuelLevelDistanceToEmpty: Float
  mileage: Float
  odometer: Float
  remoteStartStatus: String
  chargingStatusValue: String
  ignitionStatusValue: String
  doorStatus: String
  vehicleLocationLongitude: Float
  vehicleLocationLatitude: Float
  vehicleLocationSpeed: Float
  vehicleLocationDirection: String
  createdAt: Date
  updatedAt: Date
}

type Query {
  getFriends(
    accessToken: String!
  ): [Friend]
  getVehicles(
    accessToken: String!
  ): [Vehicle]
}

type Mutation {
  loginUser(
    username: String!
    firstName: String!
    lastName: String!
    code: String!
  ): UserWithToken!
  refreshTokens(
    refreshToken: String!
  ): UserWithToken!
  addFriend(
    accessToken: String!
    username: String!
  ): String!
  updateUserVehicles(
    accessToken: String!
  ): [Vehicle]
  createPost(
    accessToken: String!
    visibility: String!
    title: String!
    body: String!
    files: [String]!
  ): Post!
}
